INICIANDO <programa>
	Procedimento inicia com token: (CONST,CONST)
	INICIANDO <bloco>
		Procedimento inicia com token: (CONST,CONST)
		INICIANDO <declaracao>
			Procedimento inicia com token: (CONST,CONST)
			INICIANDO <constante>.
				Procedimento inicia com token: (CONST,CONST)
				Novo símbolo obtido: (@,<erro_lexico>)
Erro sintático: IDENT faltando na posição 7 da linha CONST @ = 4,  = 5;
				Iniciando tratamento de erro
Erro Lexico: @
				Falha no tratamento: <erro_lexico> != simbolo_ponto_virgula
				Falha no tratamento: <erro_lexico> != simbolo_ponto
				Falha no tratamento: simbolo_igualdade != simbolo_ponto_virgula
				Falha no tratamento: simbolo_igualdade != simbolo_ponto
				Falha no tratamento: numero != simbolo_ponto_virgula
				Falha no tratamento: numero != simbolo_ponto
				Falha no tratamento: simbolo_virgula != simbolo_ponto_virgula
				Falha no tratamento: simbolo_virgula != simbolo_ponto
				Falha no tratamento: simbolo_igualdade != simbolo_ponto_virgula
				Falha no tratamento: simbolo_igualdade != simbolo_ponto
				Falha no tratamento: numero != simbolo_ponto_virgula
				Falha no tratamento: numero != simbolo_ponto
				Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
			FINALIZANDO <constante>
			INICIANDO <variavel>
				Procedimento inicia com token: (VAR,VAR)
Erro sintático: IDENT faltando na posição 5 da linha VAR ,b,c;
				Iniciando tratamento de erro
				Falha no tratamento: simbolo_virgula != PROCEDURE
				Falha no tratamento: simbolo_virgula != CALL
				Falha no tratamento: simbolo_virgula != BEGIN
				Falha no tratamento: simbolo_virgula != IF
				Falha no tratamento: simbolo_virgula != WHILE
				Falha no tratamento: simbolo_virgula != simbolo_ponto_virgula
				Falha no tratamento: simbolo_virgula != simbolo_ponto
				Falha no tratamento: identificador != PROCEDURE
				Falha no tratamento: identificador != CALL
				Falha no tratamento: identificador != BEGIN
				Falha no tratamento: identificador != IF
				Falha no tratamento: identificador != WHILE
				Falha no tratamento: identificador != simbolo_ponto_virgula
				Falha no tratamento: identificador != simbolo_ponto
				Falha no tratamento: simbolo_virgula != PROCEDURE
				Falha no tratamento: simbolo_virgula != CALL
				Falha no tratamento: simbolo_virgula != BEGIN
				Falha no tratamento: simbolo_virgula != IF
				Falha no tratamento: simbolo_virgula != WHILE
				Falha no tratamento: simbolo_virgula != simbolo_ponto_virgula
				Falha no tratamento: simbolo_virgula != simbolo_ponto
				Falha no tratamento: identificador != PROCEDURE
				Falha no tratamento: identificador != CALL
				Falha no tratamento: identificador != BEGIN
				Falha no tratamento: identificador != IF
				Falha no tratamento: identificador != WHILE
				Falha no tratamento: identificador != simbolo_ponto_virgula
				Falha no tratamento: identificador != simbolo_ponto
				Falha no tratamento: simbolo_ponto_virgula != PROCEDURE
				Falha no tratamento: simbolo_ponto_virgula != CALL
				Falha no tratamento: simbolo_ponto_virgula != BEGIN
				Falha no tratamento: simbolo_ponto_virgula != IF
				Falha no tratamento: simbolo_ponto_virgula != WHILE
				Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
			FINALIZANDO <variavel>
		FINALIZANDO <declaração>
		Simbolo: (BEGIN,BEGIN)
		INICIANDO <comando>
			Procedimento inicia com token: (BEGIN,BEGIN)
			INICIANDO <comando>
				Procedimento inicia com token: (a,identificador)
				INICIANDO <expressao>
					Procedimento inicia com token: (2,numero)
					INICIANDO <operador_unario>
						Procedimento inicia com token: (2,numero)
						Token: numero
					FINALIZANDO <operador_unario>
					INICIANDO <termo>
						Procedimento inicia com token: (2,numero)
						INICIANDO <fator>
							Procedimento inicia com token: (2,numero)
						FINALIZANDO <fator>
						INICIANDO <mais_fatores>
							Procedimento inicia com token: (+,simbolo_mais)
						FINALIZANDO <mais_fatores>
					FINALIZANDO <termo>
					INICIANDO <mais_termos>
						Procedimento inicia com token: (+,simbolo_mais)
						INICIANDO <termo>
							Procedimento inicia com token: ((,simbolo_abre_parentese)
							INICIANDO <fator>
								Procedimento inicia com token: ((,simbolo_abre_parentese)
								INICIANDO <expressao>
									Procedimento inicia com token: (2,numero)
									INICIANDO <operador_unario>
										Procedimento inicia com token: (2,numero)
										Token: numero
									FINALIZANDO <operador_unario>
									INICIANDO <termo>
										Procedimento inicia com token: (2,numero)
										INICIANDO <fator>
											Procedimento inicia com token: (2,numero)
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (*,simbolo_multiplicacao)
											INICIANDO <fator>
												Procedimento inicia com token: (3,numero)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (),simbolo_fecha_parentese)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (),simbolo_fecha_parentese)
									FINALIZANDO <mais_termos>
								FINALIZANDO <expressao>
							FINALIZANDO <fator>
							INICIANDO <mais_fatores>
								Procedimento inicia com token: (;,simbolo_ponto_virgula)
							FINALIZANDO <mais_fatores>
						FINALIZANDO <termo>
						INICIANDO <mais_termos>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
						FINALIZANDO <mais_termos>
					FINALIZANDO <mais_termos>
				FINALIZANDO <expressao>
			FINALIZANDO <comando>
			Simbolo: (;,simbolo_ponto_virgula)
			INICIANDO <mais_cmd>
				Procedimento inicia com token: (;,simbolo_ponto_virgula)
				INICIANDO <comando>
					Procedimento inicia com token: (CALL,CALL)
					INICIANDO <mais_cmd>
						Procedimento inicia com token: (;,simbolo_ponto_virgula)
						INICIANDO <comando>
							Procedimento inicia com token: (WHILE,WHILE)
							INICIANDO <condicao>
								Procedimento inicia com token: (x,identificador)
								INICIANDO <expressao>
									Procedimento inicia com token: (x,identificador)
									INICIANDO <operador_unario>
										Procedimento inicia com token: (x,identificador)
										Token: identificador
									FINALIZANDO <operador_unario>
									INICIANDO <termo>
										Procedimento inicia com token: (x,identificador)
										INICIANDO <fator>
											Procedimento inicia com token: (x,identificador)
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (+,simbolo_mais)
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (+,simbolo_mais)
										INICIANDO <termo>
											Procedimento inicia com token: (3,numero)
											INICIANDO <fator>
												Procedimento inicia com token: (3,numero)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (>,simbolo_maior)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (>,simbolo_maior)
										FINALIZANDO <mais_termos>
									FINALIZANDO <mais_termos>
								FINALIZANDO <expressao>
								INICIANDO <relacional>
									Procedimento inicia com token: (>,simbolo_maior)
								FINALIZANDO <relacional>
								INICIANDO <expressao>
									Procedimento inicia com token: (y,identificador)
									INICIANDO <operador_unario>
										Procedimento inicia com token: (y,identificador)
										Token: identificador
									FINALIZANDO <operador_unario>
									INICIANDO <termo>
										Procedimento inicia com token: (y,identificador)
										INICIANDO <fator>
											Procedimento inicia com token: (y,identificador)
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (+,simbolo_mais)
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (+,simbolo_mais)
										INICIANDO <termo>
											Procedimento inicia com token: (5,numero)
											INICIANDO <fator>
												Procedimento inicia com token: (5,numero)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (DO,DO)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (DO,DO)
										FINALIZANDO <mais_termos>
									FINALIZANDO <mais_termos>
								FINALIZANDO <expressao>
							FINALIZANDO <condicao>
							INICIANDO <comando>
								Procedimento inicia com token: (a,identificador)
								INICIANDO <expressao>
									Procedimento inicia com token: (a,identificador)
									INICIANDO <operador_unario>
										Procedimento inicia com token: (a,identificador)
										Token: identificador
									FINALIZANDO <operador_unario>
									INICIANDO <termo>
										Procedimento inicia com token: (a,identificador)
										INICIANDO <fator>
											Procedimento inicia com token: (a,identificador)
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (+,simbolo_mais)
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (+,simbolo_mais)
										INICIANDO <termo>
											Procedimento inicia com token: (x,identificador)
											INICIANDO <fator>
												Procedimento inicia com token: (x,identificador)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (;,simbolo_ponto_virgula)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (;,simbolo_ponto_virgula)
										FINALIZANDO <mais_termos>
									FINALIZANDO <mais_termos>
								FINALIZANDO <expressao>
							FINALIZANDO <comando>
							Simbolo: (;,simbolo_ponto_virgula)
						FINALIZANDO <comando>
						Simbolo: (;,simbolo_ponto_virgula)
						INICIANDO <mais_cmd>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
							INICIANDO <comando>
								Procedimento inicia com token: (b,identificador)
								INICIANDO <expressao>
									Procedimento inicia com token: (3,numero)
									INICIANDO <operador_unario>
										Procedimento inicia com token: (3,numero)
										Token: numero
									FINALIZANDO <operador_unario>
									INICIANDO <termo>
										Procedimento inicia com token: (3,numero)
										INICIANDO <fator>
											Procedimento inicia com token: (3,numero)
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (-,simbolo_mais)
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (-,simbolo_mais)
										INICIANDO <termo>
											Procedimento inicia com token: (b,identificador)
											INICIANDO <fator>
												Procedimento inicia com token: (b,identificador)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (/,simbolo_divisao)
												INICIANDO <fator>
													Procedimento inicia com token: (a,identificador)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (;,simbolo_ponto_virgula)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (;,simbolo_ponto_virgula)
										FINALIZANDO <mais_termos>
									FINALIZANDO <mais_termos>
								FINALIZANDO <expressao>
							FINALIZANDO <comando>
							Simbolo: (;,simbolo_ponto_virgula)
							INICIANDO <mais_cmd>
								Procedimento inicia com token: (;,simbolo_ponto_virgula)
								INICIANDO <comando>
									Procedimento inicia com token: (c,identificador)
									INICIANDO <expressao>
										Procedimento inicia com token: (5,numero)
										INICIANDO <operador_unario>
											Procedimento inicia com token: (5,numero)
											Token: numero
										FINALIZANDO <operador_unario>
										INICIANDO <termo>
											Procedimento inicia com token: (5,numero)
											INICIANDO <fator>
												Procedimento inicia com token: (5,numero)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (+,simbolo_mais)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (+,simbolo_mais)
											INICIANDO <termo>
												Procedimento inicia com token: (7,numero)
												INICIANDO <fator>
													Procedimento inicia com token: (7,numero)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (;,simbolo_ponto_virgula)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (;,simbolo_ponto_virgula)
											FINALIZANDO <mais_termos>
										FINALIZANDO <mais_termos>
									FINALIZANDO <expressao>
								FINALIZANDO <comando>
								Simbolo: (;,simbolo_ponto_virgula)
								INICIANDO <mais_cmd>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
									INICIANDO <comando>
										Procedimento inicia com token: (END,END)
									FINALIZANDO <comando>
									Simbolo: (END,END)
									INICIANDO <mais_cmd>
										Procedimento inicia com token: (END,END)
									FINALIZANDO <mais_cmd>
								FINALIZANDO <mais_cmd>
							FINALIZANDO <mais_cmd>
						FINALIZANDO <mais_cmd>
					FINALIZANDO <mais_cmd>
				FINALIZANDO <mais_cmd>
			FINALIZANDO <comando>
			Simbolo: (.,simbolo_ponto)
		FINALIZANDO <bloco>.
		Simbolo: (.,simbolo_ponto)
		Programa terminou como esperado (leu ponto final --> leu NULL)
	FINALIZANDO <bloco>.
