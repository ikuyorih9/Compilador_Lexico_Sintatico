INICIANDO <programa>
	Procedimento inicia com token: (CONST,CONST)
	INICIANDO <bloco>
		Procedimento inicia com token: (CONST,CONST)
		INICIANDO <declaracao>
			Procedimento inicia com token: (CONST,CONST)
			INICIANDO <constante>.
				Procedimento inicia com token: (CONST,CONST)
				Novo símbolo obtido: (#,<erro_lexico>)
Erro Lexico: # na posição 7 da linha CONST # = 3, a = 5;
				Iniciando tratamento de erro
				Falha no tratamento: <erro_lexico> != simbolo_ponto_virgula
				Falha no tratamento: <erro_lexico> != VAR
				Falha no tratamento: <erro_lexico> != PROCEDURE
				Falha no tratamento: <erro_lexico> != CALL
				Falha no tratamento: <erro_lexico> != BEGIN
				Falha no tratamento: <erro_lexico> != IF
				Falha no tratamento: <erro_lexico> != WHILE
				Falha no tratamento: <erro_lexico> != simbolo_ponto
				Falha no tratamento: simbolo_igualdade != simbolo_ponto_virgula
				Falha no tratamento: simbolo_igualdade != VAR
				Falha no tratamento: simbolo_igualdade != PROCEDURE
				Falha no tratamento: simbolo_igualdade != CALL
				Falha no tratamento: simbolo_igualdade != BEGIN
				Falha no tratamento: simbolo_igualdade != IF
				Falha no tratamento: simbolo_igualdade != WHILE
				Falha no tratamento: simbolo_igualdade != simbolo_ponto
				Falha no tratamento: numero != simbolo_ponto_virgula
				Falha no tratamento: numero != VAR
				Falha no tratamento: numero != PROCEDURE
				Falha no tratamento: numero != CALL
				Falha no tratamento: numero != BEGIN
				Falha no tratamento: numero != IF
				Falha no tratamento: numero != WHILE
				Falha no tratamento: numero != simbolo_ponto
				Falha no tratamento: simbolo_virgula != simbolo_ponto_virgula
				Falha no tratamento: simbolo_virgula != VAR
				Falha no tratamento: simbolo_virgula != PROCEDURE
				Falha no tratamento: simbolo_virgula != CALL
				Falha no tratamento: simbolo_virgula != BEGIN
				Falha no tratamento: simbolo_virgula != IF
				Falha no tratamento: simbolo_virgula != WHILE
				Falha no tratamento: simbolo_virgula != simbolo_ponto
				Falha no tratamento: identificador != simbolo_ponto_virgula
				Falha no tratamento: identificador != VAR
				Falha no tratamento: identificador != PROCEDURE
				Falha no tratamento: identificador != CALL
				Falha no tratamento: identificador != BEGIN
				Falha no tratamento: identificador != IF
				Falha no tratamento: identificador != WHILE
				Falha no tratamento: identificador != simbolo_ponto
				Falha no tratamento: simbolo_igualdade != simbolo_ponto_virgula
				Falha no tratamento: simbolo_igualdade != VAR
				Falha no tratamento: simbolo_igualdade != PROCEDURE
				Falha no tratamento: simbolo_igualdade != CALL
				Falha no tratamento: simbolo_igualdade != BEGIN
				Falha no tratamento: simbolo_igualdade != IF
				Falha no tratamento: simbolo_igualdade != WHILE
				Falha no tratamento: simbolo_igualdade != simbolo_ponto
				Falha no tratamento: numero != simbolo_ponto_virgula
				Falha no tratamento: numero != VAR
				Falha no tratamento: numero != PROCEDURE
				Falha no tratamento: numero != CALL
				Falha no tratamento: numero != BEGIN
				Falha no tratamento: numero != IF
				Falha no tratamento: numero != WHILE
				Falha no tratamento: numero != simbolo_ponto
				Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
			FINALIZANDO <constante>
			INICIANDO <variavel>
				Procedimento inicia com token: (VAR,VAR)
				Proximo simbolo: (a,identificador)
				IDENT encontrado!
				Proximo simbolo: (,,simbolo_virgula)
				INICIANDO <mais_var>
					Procedimento inicia com token: (,,simbolo_virgula)
					SIMB_VIRGULA encontrado!
					Proximo simbolo: (b,identificador)
					IDENT encontrado!
					Proximo simbolo: (,,simbolo_virgula)
					INICIANDO <mais_var>
						Procedimento inicia com token: (,,simbolo_virgula)
						SIMB_VIRGULA encontrado!
						Proximo simbolo: (c,identificador)
						IDENT encontrado!
						Proximo simbolo: (;,simbolo_ponto_virgula)
						INICIANDO <mais_var>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
						FINALIZANDO <mais_var>
					FINALIZANDO <mais_var>
					SIMB_PVIRGULA encontrado!
					Proximo simbolo: (PROCEDURE,PROCEDURE)
				FINALIZANDO <variavel>
				Simbolo: (PROCEDURE,PROCEDURE)
				INICIANDO <procedimento>
					Procedimento inicia com token: (PROCEDURE,PROCEDURE)
					PROCEDURE encontrado!
					Proximo simbolo: (a,identificador)
					SIMB_PVIRGULA encontrado!
					Proximo simbolo: (CONST,CONST)
					INICIANDO <bloco>
						Procedimento inicia com token: (CONST,CONST)
						INICIANDO <declaracao>
							Procedimento inicia com token: (CONST,CONST)
							INICIANDO <constante>.
								Procedimento inicia com token: (CONST,CONST)
								Novo símbolo obtido: (y,identificador)
								IDENT encontrado!
								Proximo simbolo: (=,simbolo_igualdade)
								SIMB_IGUAL (=) encontrado!
								Proximo simbolo: (2,numero)
								SIMB_NUMERO encontrado!
								Proximo simbolo: (;,simbolo_ponto_virgula)
								INICIANDO <mais_const>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
								FINALIZANDO <mais_const>
								SIMB_PVIRGULA (;) encontrado!
								Proximo simbolo: (VAR,VAR)
							FINALIZANDO <constante>
							INICIANDO <variavel>
								Procedimento inicia com token: (VAR,VAR)
								Proximo simbolo: (g,identificador)
								IDENT encontrado!
								Proximo simbolo: (,,simbolo_virgula)
								INICIANDO <mais_var>
									Procedimento inicia com token: (,,simbolo_virgula)
									SIMB_VIRGULA encontrado!
									Proximo simbolo: (h,identificador)
									IDENT encontrado!
									Proximo simbolo: (,,simbolo_virgula)
									INICIANDO <mais_var>
										Procedimento inicia com token: (,,simbolo_virgula)
										SIMB_VIRGULA encontrado!
										Proximo simbolo: (j,identificador)
										IDENT encontrado!
										Proximo simbolo: (;,simbolo_ponto_virgula)
										INICIANDO <mais_var>
											Procedimento inicia com token: (;,simbolo_ponto_virgula)
										FINALIZANDO <mais_var>
									FINALIZANDO <mais_var>
									SIMB_PVIRGULA encontrado!
									Proximo simbolo: (g,identificador)
								FINALIZANDO <variavel>
								Simbolo: (g,identificador)
							FINALIZANDO <declaração>
							INICIANDO <comando>
								Procedimento inicia com token: (g,identificador)
								IDENT encontrado!
								Proximo simbolo: (:,<erro_lexico>)
Erro Lexico: : na posição 6 da linha     g: ; h + j*2;
								Iniciando tratamento de erro
								Falha no tratamento: <erro_lexico> != simbolo_ponto_virgula
								Falha no tratamento: <erro_lexico> != simbolo_ponto
								Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
							FINALIZANDO <comando>
						FINALIZANDO <bloco>.
						SIMB_PVIRGULA encontrado!
						Proximo simbolo: (h,identificador)
						INICIANDO <procedimento>
							Procedimento inicia com token: (h,identificador)
						FINALIZANDO <procedimento>
					FINALIZANDO <procedimento>
				FINALIZANDO <declaração>
				INICIANDO <comando>
					Procedimento inicia com token: (h,identificador)
					IDENT encontrado!
					Proximo simbolo: (+,simbolo_mais)
ERRO SINTÁTICO: SIMB_ATRIBUICAO faltando na posição 12 da linha     g: ; h + j*2;
					Iniciando tratamento de erro
					Falha no tratamento: simbolo_mais != simbolo_ponto_virgula
					Falha no tratamento: simbolo_mais != simbolo_ponto
					Falha no tratamento: identificador != simbolo_ponto_virgula
					Falha no tratamento: identificador != simbolo_ponto
					Falha no tratamento: simbolo_multiplicacao != simbolo_ponto_virgula
					Falha no tratamento: simbolo_multiplicacao != simbolo_ponto
					Falha no tratamento: numero != simbolo_ponto_virgula
					Falha no tratamento: numero != simbolo_ponto
					Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
				FINALIZANDO <comando>
			FINALIZANDO <bloco>.
Erro sintático: SIMB_PONTO faltando na posição 17 da linha     g: ; h + j*2;

			Iniciando tratamento de erro
			Falha no tratamento: simbolo_ponto_virgula != simbolo_ponto
			Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
		FINALIZANDO <programa>
		INICIANDO <programa>
			Procedimento inicia com token: (CONST,CONST)
			INICIANDO <bloco>
				Procedimento inicia com token: (CONST,CONST)
				INICIANDO <declaracao>
					Procedimento inicia com token: (CONST,CONST)
					INICIANDO <constante>.
						Procedimento inicia com token: (CONST,CONST)
						Novo símbolo obtido: (a,identificador)
						IDENT encontrado!
						Proximo simbolo: (=,simbolo_igualdade)
						SIMB_IGUAL (=) encontrado!
						Proximo simbolo: (4,numero)
						SIMB_NUMERO encontrado!
						Proximo simbolo: (,,simbolo_virgula)
						INICIANDO <mais_const>
							Procedimento inicia com token: (,,simbolo_virgula)
							SIMB_VIRGULA encontrado!
							Proximo simbolo: (b,identificador)
							IDENT encontrado!
							Proximo simbolo: (=,simbolo_igualdade)
							SIMB_IGUAL encontrado!
							Proximo simbolo: (5,numero)
							SIMB_IGUAL encontrado!
							Proximo simbolo: (;,simbolo_ponto_virgula)
							INICIANDO <mais_const>
								Procedimento inicia com token: (;,simbolo_ponto_virgula)
							FINALIZANDO <mais_const>
						FINALIZANDO <mais_const>
						SIMB_PVIRGULA (;) encontrado!
						Proximo simbolo: (VAR,VAR)
					FINALIZANDO <constante>
					INICIANDO <variavel>
						Procedimento inicia com token: (VAR,VAR)
						Proximo simbolo: (a,identificador)
						IDENT encontrado!
						Proximo simbolo: (,,simbolo_virgula)
						INICIANDO <mais_var>
							Procedimento inicia com token: (,,simbolo_virgula)
							SIMB_VIRGULA encontrado!
							Proximo simbolo: (b,identificador)
							IDENT encontrado!
							Proximo simbolo: (,,simbolo_virgula)
							INICIANDO <mais_var>
								Procedimento inicia com token: (,,simbolo_virgula)
								SIMB_VIRGULA encontrado!
								Proximo simbolo: (c,identificador)
								IDENT encontrado!
								Proximo simbolo: (;,simbolo_ponto_virgula)
								INICIANDO <mais_var>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
								FINALIZANDO <mais_var>
							FINALIZANDO <mais_var>
							SIMB_PVIRGULA encontrado!
							Proximo simbolo: (BEGIN,BEGIN)
						FINALIZANDO <variavel>
						Simbolo: (BEGIN,BEGIN)
					FINALIZANDO <declaração>
					INICIANDO <comando>
						Procedimento inicia com token: (BEGIN,BEGIN)
						BEGIN encontrado!
						Proximo simbolo: (a,identificador)
						INICIANDO <comando>
							Procedimento inicia com token: (a,identificador)
							IDENT encontrado!
							Proximo simbolo: (:=,simbolo_atribuicao)
							SIMB_ATRIBUICAO encontrado!
							Proximo simbolo: (2,numero)
							INICIANDO <expressao>
								Procedimento inicia com token: (2,numero)
								INICIANDO <operador_unario>
									Procedimento inicia com token: (2,numero)
								FINALIZANDO <operador_unario>
								INICIANDO <termo>
									Procedimento inicia com token: (2,numero)
									INICIANDO <fator>
										Procedimento inicia com token: (2,numero)
									FINALIZANDO <fator>
									INICIANDO <mais_fatores>
										Procedimento inicia com token: (+,simbolo_mais)
									FINALIZANDO <mais_fatores>
								FINALIZANDO <termo>
								INICIANDO <mais_termos>
									Procedimento inicia com token: (+,simbolo_mais)
									simbolo_mais encontrado!
									Proximo simbolo: ((,simbolo_abre_parentese)
									INICIANDO <termo>
										Procedimento inicia com token: ((,simbolo_abre_parentese)
										INICIANDO <fator>
											Procedimento inicia com token: ((,simbolo_abre_parentese)
											INICIANDO <expressao>
												Procedimento inicia com token: (2,numero)
												INICIANDO <operador_unario>
													Procedimento inicia com token: (2,numero)
												FINALIZANDO <operador_unario>
												INICIANDO <termo>
													Procedimento inicia com token: (2,numero)
													INICIANDO <fator>
														Procedimento inicia com token: (2,numero)
													FINALIZANDO <fator>
													INICIANDO <mais_fatores>
														Procedimento inicia com token: (*,simbolo_multiplicacao)
														simbolo_multiplicacao encontrado!
														Proximo simbolo: (3,numero)
														INICIANDO <fator>
															Procedimento inicia com token: (3,numero)
														FINALIZANDO <fator>
														INICIANDO <mais_fatores>
															Procedimento inicia com token: (),simbolo_fecha_parentese)
														FINALIZANDO <mais_fatores>
													FINALIZANDO <mais_fatores>
												FINALIZANDO <termo>
												INICIANDO <mais_termos>
													Procedimento inicia com token: (),simbolo_fecha_parentese)
												FINALIZANDO <mais_termos>
											FINALIZANDO <expressao>
										FINALIZANDO <fator>
										INICIANDO <mais_fatores>
											Procedimento inicia com token: (;,simbolo_ponto_virgula)
										FINALIZANDO <mais_fatores>
									FINALIZANDO <termo>
									INICIANDO <mais_termos>
										Procedimento inicia com token: (;,simbolo_ponto_virgula)
									FINALIZANDO <mais_termos>
								FINALIZANDO <mais_termos>
							FINALIZANDO <expressao>
						FINALIZANDO <comando>
						Simbolo: (;,simbolo_ponto_virgula)
						INICIANDO <mais_cmd>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
							SIMB_PVIRGULA encontrado!
							Proximo simbolo: (CALL,CALL)
							INICIANDO <comando>
								Procedimento inicia com token: (CALL,CALL)
								CALL encontrado!
								Proximo simbolo: (;,simbolo_ponto_virgula)
ERRO SINTÁTICO: IDENT faltando na posição 10 da linha     CALL ;
								Iniciando tratamento de erro
								Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
							FINALIZANDO <comando>
							INICIANDO <mais_cmd>
								Procedimento inicia com token: (;,simbolo_ponto_virgula)
								SIMB_PVIRGULA encontrado!
								Proximo simbolo: (IF,IF)
								INICIANDO <comando>
									Procedimento inicia com token: (IF,IF)
									IF encontrado!
									Proximo simbolo: (x,identificador)
									INICIANDO <condicao>
										Procedimento inicia com token: (x,identificador)
										INICIANDO <expressao>
											Procedimento inicia com token: (x,identificador)
											INICIANDO <operador_unario>
												Procedimento inicia com token: (x,identificador)
											FINALIZANDO <operador_unario>
											INICIANDO <termo>
												Procedimento inicia com token: (x,identificador)
												INICIANDO <fator>
													Procedimento inicia com token: (x,identificador)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (+,simbolo_mais)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (+,simbolo_mais)
												simbolo_mais encontrado!
												Proximo simbolo: (3,numero)
												INICIANDO <termo>
													Procedimento inicia com token: (3,numero)
													INICIANDO <fator>
														Procedimento inicia com token: (3,numero)
													FINALIZANDO <fator>
													INICIANDO <mais_fatores>
														Procedimento inicia com token: (),simbolo_fecha_parentese)
													FINALIZANDO <mais_fatores>
												FINALIZANDO <termo>
												INICIANDO <mais_termos>
													Procedimento inicia com token: (),simbolo_fecha_parentese)
												FINALIZANDO <mais_termos>
											FINALIZANDO <mais_termos>
										FINALIZANDO <expressao>
										INICIANDO <relacional>
											Procedimento inicia com token: (),simbolo_fecha_parentese)
ERRO SINTÁTICO:  = | <> | < | <= | > | >= faltando na posição 13 da linha     IF x + 3)6 > 5  THEN
											Iniciando tratamento de erro
											Falha no tratamento: simbolo_fecha_parentese != simbolo_menos
											Falha no tratamento: simbolo_fecha_parentese != simbolo_mais
											Falha no tratamento: simbolo_fecha_parentese != identificador
											Falha no tratamento: simbolo_fecha_parentese != numero
											Falha no tratamento: simbolo_fecha_parentese != simbolo_abre_parentese
											Falha no tratamento: simbolo_fecha_parentese != simbolo_ponto_virgula
											Falha no tratamento: simbolo_fecha_parentese != THEN
											Falha no tratamento: simbolo_fecha_parentese != DO
											Falha no tratamento: simbolo_fecha_parentese != simbolo_ponto
											Falha no tratamento: numero != simbolo_menos
											Falha no tratamento: numero != simbolo_mais
											Falha no tratamento: numero != identificador
											Encontrou simbolo de sincronizacao: numero
										FINALIZANDO <relacional>
										INICIANDO <expressao>
											Procedimento inicia com token: (6,numero)
											INICIANDO <operador_unario>
												Procedimento inicia com token: (6,numero)
											FINALIZANDO <operador_unario>
											INICIANDO <termo>
												Procedimento inicia com token: (6,numero)
												INICIANDO <fator>
													Procedimento inicia com token: (6,numero)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (>,simbolo_maior)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (>,simbolo_maior)
											FINALIZANDO <mais_termos>
										FINALIZANDO <expressao>
									FINALIZANDO <condicao>
ERRO SINTÁTICO: THEN faltando na posição 16 da linha     IF x + 3)6 > 5  THEN
									Iniciando tratamento de erro
									Falha no tratamento: simbolo_maior != THEN
									Falha no tratamento: simbolo_maior != END
									Falha no tratamento: simbolo_maior != DO
									Falha no tratamento: simbolo_maior != BEGIN
									Falha no tratamento: simbolo_maior != IF
									Falha no tratamento: simbolo_maior != WHILE
									Falha no tratamento: simbolo_maior != simbolo_ponto
									Falha no tratamento: numero != THEN
									Falha no tratamento: numero != END
									Falha no tratamento: numero != DO
									Falha no tratamento: numero != BEGIN
									Falha no tratamento: numero != IF
									Falha no tratamento: numero != WHILE
									Falha no tratamento: numero != simbolo_ponto
									Encontrou simbolo de sincronizacao: THEN
								FINALIZANDO <comando>
								INICIANDO <mais_cmd>
									Procedimento inicia com token: (THEN,THEN)
								FINALIZANDO <mais_cmd>
							FINALIZANDO <mais_cmd>
						FINALIZANDO <mais_cmd>
ERRO SINTÁTICO: END faltando na posição 24 da linha     IF x + 3)6 > 5  THEN
						Iniciando tratamento de erro
						Falha no tratamento: THEN != END
						Falha no tratamento: THEN != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: <erro_lexico> != END
						Falha no tratamento: <erro_lexico> != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_atribuicao != END
						Falha no tratamento: simbolo_atribuicao != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_mais != END
						Falha no tratamento: simbolo_mais != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_ponto_virgula != END
						Falha no tratamento: simbolo_ponto_virgula != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_atribuicao != END
						Falha no tratamento: simbolo_atribuicao != simbolo_ponto
						Falha no tratamento: numero != END
						Falha no tratamento: numero != simbolo_ponto
						Falha no tratamento: simbolo_mais != END
						Falha no tratamento: simbolo_mais != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_divisao != END
						Falha no tratamento: simbolo_divisao != simbolo_ponto
						Falha no tratamento: identificador != END
						Falha no tratamento: identificador != simbolo_ponto
						Falha no tratamento: simbolo_ponto_virgula != END
						Falha no tratamento: simbolo_ponto_virgula != simbolo_ponto
						Encontrou simbolo de sincronizacao: END
					FINALIZANDO <comando>
				FINALIZANDO <bloco>.
Erro sintático: SIMB_PONTO faltando na posição 7 da linha     END.

				Iniciando tratamento de erro
				Falha no tratamento: END != simbolo_ponto
				Falha no tratamento: END != simbolo_ponto_virgula
				Falha no tratamento: END != CONST
				Falha no tratamento: END != VAR
				Falha no tratamento: END != PROCEDURE
				Falha no tratamento: END != CALL
				Falha no tratamento: END != BEGIN
				Falha no tratamento: END != IF
				Falha no tratamento: END != WHILE
				Encontrou simbolo de sincronizacao: simbolo_ponto
			FINALIZANDO <programa>
			INICIANDO <programa>
				Procedimento inicia com token: (c,identificador)
				INICIANDO <bloco>
					Procedimento inicia com token: (c,identificador)
					INICIANDO <comando>
						Procedimento inicia com token: (c,identificador)
						IDENT encontrado!
						Proximo simbolo: (:=,simbolo_atribuicao)
						SIMB_ATRIBUICAO encontrado!
						Proximo simbolo: (5,numero)
						INICIANDO <expressao>
							Procedimento inicia com token: (5,numero)
							INICIANDO <operador_unario>
								Procedimento inicia com token: (5,numero)
							FINALIZANDO <operador_unario>
							INICIANDO <termo>
								Procedimento inicia com token: (5,numero)
								INICIANDO <fator>
									Procedimento inicia com token: (5,numero)
								FINALIZANDO <fator>
								INICIANDO <mais_fatores>
									Procedimento inicia com token: (+,simbolo_mais)
								FINALIZANDO <mais_fatores>
							FINALIZANDO <termo>
							INICIANDO <mais_termos>
								Procedimento inicia com token: (+,simbolo_mais)
								simbolo_mais encontrado!
								Proximo simbolo: (7,numero)
								INICIANDO <termo>
									Procedimento inicia com token: (7,numero)
									INICIANDO <fator>
										Procedimento inicia com token: (7,numero)
									FINALIZANDO <fator>
									INICIANDO <mais_fatores>
										Procedimento inicia com token: (;,simbolo_ponto_virgula)
									FINALIZANDO <mais_fatores>
								FINALIZANDO <termo>
								INICIANDO <mais_termos>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
								FINALIZANDO <mais_termos>
							FINALIZANDO <mais_termos>
						FINALIZANDO <expressao>
					FINALIZANDO <comando>
					Simbolo: (;,simbolo_ponto_virgula)
				FINALIZANDO <bloco>.
Erro sintático: SIMB_PONTO faltando na posição 14 da linha     c:= 5 + 7;

				Iniciando tratamento de erro
				Falha no tratamento: simbolo_ponto_virgula != simbolo_ponto
				Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
			FINALIZANDO <programa>
			INICIANDO <programa>
				Procedimento inicia com token: (%,<erro_lexico>)
				INICIANDO <bloco>
					Procedimento inicia com token: (%,<erro_lexico>)
Erro Lexico: % na posição 5 da linha END % 					Iniciando tratamento de erro
					Falha no tratamento: <erro_lexico> != simbolo_ponto
					Falha no tratamento: <erro_lexico> != simbolo_ponto_virgula
					Falha no tratamento: <erro_lexico> != CONST
					Falha no tratamento: <erro_lexico> != VAR
					Falha no tratamento: <erro_lexico> != PROCEDURE
					Falha no tratamento: <erro_lexico> != CALL
					Falha no tratamento: <erro_lexico> != BEGIN
					Falha no tratamento: <erro_lexico> != IF
					Falha no tratamento: <erro_lexico> != WHILE
					Não encontrou simbolo de sincronizacao, chegou ao fim do programa :(
					FINALIZANDO <bloco>
					INICIANDO <bloco>
					FINALIZANDO <bloco>.
					Programa terminou como esperado (leu ponto final --> leu NULL)
				FINALIZANDO <programa>.
