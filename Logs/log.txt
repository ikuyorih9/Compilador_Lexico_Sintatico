INICIANDO <programa>
	Procedimento inicia com token: (CONST,CONST)
	INICIANDO <bloco>
		Procedimento inicia com token: (CONST,CONST)
		INICIANDO <declaracao>
			Procedimento inicia com token: (CONST,CONST)
			INICIANDO <constante>.
				Procedimento inicia com token: (CONST,CONST)
				Novo símbolo obtido: (a,identificador)
				IDENT encontrado!
				Proximo simbolo: (=,simbolo_igualdade)
				SIMB_IGUAL (=) encontrado!
				Proximo simbolo: (3,numero)
				SIMB_NUMERO encontrado!
				Proximo simbolo: (,,simbolo_virgula)
				INICIANDO <mais_const>
					Procedimento inicia com token: (,,simbolo_virgula)
					SIMB_VIRGULA encontrado!
					Proximo simbolo: (b,identificador)
					IDENT encontrado!
					Proximo simbolo: (=,simbolo_igualdade)
					SIMB_IGUAL encontrado!
					Proximo simbolo: (5,numero)
					SIMB_IGUAL encontrado!
					Proximo simbolo: (VAR,VAR)
					INICIANDO <mais_const>
						Procedimento inicia com token: (VAR,VAR)
					FINALIZANDO <mais_const>
				FINALIZANDO <mais_const>
Erro sintático: SIMB_PVIRGULA faltando na posição 3 da linha VAR a,b,c;
				Iniciando tratamento de erro
				Falha no tratamento: VAR != simbolo_ponto_virgula
				Encontrou simbolo de sincronizacao: VAR
			FINALIZANDO <constante>
			INICIANDO <variavel>
				Procedimento inicia com token: (VAR,VAR)
				INICIANDO <mais_var>
					Procedimento inicia com token: (,,simbolo_virgula)
					INICIANDO <mais_var>
						Procedimento inicia com token: (,,simbolo_virgula)
						INICIANDO <mais_var>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
						FINALIZANDO <mais_var>
					FINALIZANDO <mais_var>
				FINALIZANDO <variavel>
				Simbolo: (PROCEDURE,PROCEDURE)
				INICIANDO <procedimento>
					Procedimento inicia com token: (PROCEDURE,PROCEDURE)
					INICIANDO <bloco>
						Procedimento inicia com token: (CONST,CONST)
						INICIANDO <declaracao>
							Procedimento inicia com token: (CONST,CONST)
							INICIANDO <constante>.
								Procedimento inicia com token: (CONST,CONST)
								Novo símbolo obtido: (y,identificador)
								IDENT encontrado!
								Proximo simbolo: (=,simbolo_igualdade)
								SIMB_IGUAL (=) encontrado!
								Proximo simbolo: (2,numero)
								SIMB_NUMERO encontrado!
								Proximo simbolo: (;,simbolo_ponto_virgula)
								INICIANDO <mais_const>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
								FINALIZANDO <mais_const>
								SIMB_PVIRGULA (;) encontrado!
								Proximo simbolo: (VAR,VAR)
							FINALIZANDO <constante>
							INICIANDO <variavel>
								Procedimento inicia com token: (VAR,VAR)
								INICIANDO <mais_var>
									Procedimento inicia com token: (,,simbolo_virgula)
									INICIANDO <mais_var>
										Procedimento inicia com token: (,,simbolo_virgula)
										INICIANDO <mais_var>
											Procedimento inicia com token: (g,identificador)
										FINALIZANDO <mais_var>
									FINALIZANDO <mais_var>
Erro sintático: SIMB_PVIRGULA faltando na posição 5 da linha     g: ; h + j*2;
									Iniciando tratamento de erro
									Falha no tratamento: identificador != PROCEDURE
									Falha no tratamento: identificador != CALL
									Falha no tratamento: identificador != BEGIN
									Falha no tratamento: identificador != IF
									Falha no tratamento: identificador != WHILE
									Falha no tratamento: identificador != simbolo_ponto_virgula
									Falha no tratamento: identificador != simbolo_ponto
									Falha no tratamento: <erro_lexico> != PROCEDURE
									Falha no tratamento: <erro_lexico> != CALL
									Falha no tratamento: <erro_lexico> != BEGIN
									Falha no tratamento: <erro_lexico> != IF
									Falha no tratamento: <erro_lexico> != WHILE
									Falha no tratamento: <erro_lexico> != simbolo_ponto_virgula
									Falha no tratamento: <erro_lexico> != simbolo_ponto
									Falha no tratamento: simbolo_ponto_virgula != PROCEDURE
									Falha no tratamento: simbolo_ponto_virgula != CALL
									Falha no tratamento: simbolo_ponto_virgula != BEGIN
									Falha no tratamento: simbolo_ponto_virgula != IF
									Falha no tratamento: simbolo_ponto_virgula != WHILE
									Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
								FINALIZANDO <variavel>
							FINALIZANDO <declaração>
							Simbolo: (h,identificador)
							INICIANDO <comando>
								Procedimento inicia com token: (h,identificador)
Erro sintático: SIMB_ATRIBUICAO faltando na posição 12 da linha     g: ; h + j*2;
								Iniciando tratamento de erro
								Falha no tratamento: simbolo_mais != simbolo_ponto_virgula
								Falha no tratamento: simbolo_mais != simbolo_ponto
								Falha no tratamento: identificador != simbolo_ponto_virgula
								Falha no tratamento: identificador != simbolo_ponto
								Falha no tratamento: simbolo_multiplicacao != simbolo_ponto_virgula
								Falha no tratamento: simbolo_multiplicacao != simbolo_ponto
								Falha no tratamento: numero != simbolo_ponto_virgula
								Falha no tratamento: numero != simbolo_ponto
								Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
							FINALIZANDO <comando>
						FINALIZANDO <bloco>.
						Simbolo: (;,simbolo_ponto_virgula)
						INICIANDO <procedimento>
							Procedimento inicia com token: (BEGIN,BEGIN)
						FINALIZANDO <procedimento>
					FINALIZANDO <procedimento>
				FINALIZANDO <declaração>
				Simbolo: (BEGIN,BEGIN)
				INICIANDO <comando>
					Procedimento inicia com token: (BEGIN,BEGIN)
					INICIANDO <comando>
						Procedimento inicia com token: (a,identificador)
						INICIANDO <expressao>
							Procedimento inicia com token: (2,numero)
							INICIANDO <operador_unario>
								Procedimento inicia com token: (2,numero)
								Token: numero
							FINALIZANDO <operador_unario>
							INICIANDO <termo>
								Procedimento inicia com token: (2,numero)
								INICIANDO <fator>
									Procedimento inicia com token: (2,numero)
								FINALIZANDO <fator>
								INICIANDO <mais_fatores>
									Procedimento inicia com token: (+,simbolo_mais)
								FINALIZANDO <mais_fatores>
							FINALIZANDO <termo>
							INICIANDO <mais_termos>
								Procedimento inicia com token: (+,simbolo_mais)
								INICIANDO <termo>
									Procedimento inicia com token: ((,simbolo_abre_parentese)
									INICIANDO <fator>
										Procedimento inicia com token: ((,simbolo_abre_parentese)
										INICIANDO <expressao>
											Procedimento inicia com token: (2,numero)
											INICIANDO <operador_unario>
												Procedimento inicia com token: (2,numero)
												Token: numero
											FINALIZANDO <operador_unario>
											INICIANDO <termo>
												Procedimento inicia com token: (2,numero)
												INICIANDO <fator>
													Procedimento inicia com token: (2,numero)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (*,simbolo_multiplicacao)
													INICIANDO <fator>
														Procedimento inicia com token: (3,numero)
													FINALIZANDO <fator>
													INICIANDO <mais_fatores>
														Procedimento inicia com token: (),simbolo_fecha_parentese)
													FINALIZANDO <mais_fatores>
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (),simbolo_fecha_parentese)
											FINALIZANDO <mais_termos>
										FINALIZANDO <expressao>
									FINALIZANDO <fator>
									INICIANDO <mais_fatores>
										Procedimento inicia com token: (;,simbolo_ponto_virgula)
									FINALIZANDO <mais_fatores>
								FINALIZANDO <termo>
								INICIANDO <mais_termos>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
								FINALIZANDO <mais_termos>
							FINALIZANDO <mais_termos>
						FINALIZANDO <expressao>
					FINALIZANDO <comando>
					Simbolo: (;,simbolo_ponto_virgula)
					INICIANDO <mais_cmd>
						Procedimento inicia com token: (;,simbolo_ponto_virgula)
						INICIANDO <comando>
							Procedimento inicia com token: (CALL,CALL)
Erro sintático: IDENT faltando na posição 10 da linha     CALL ;
							Iniciando tratamento de erro
							Encontrou simbolo de sincronizacao: simbolo_ponto_virgula
						FINALIZANDO <comando>
						INICIANDO <mais_cmd>
							Procedimento inicia com token: (;,simbolo_ponto_virgula)
							INICIANDO <comando>
								Procedimento inicia com token: (IF,IF)
								INICIANDO <condicao>
									Procedimento inicia com token: (x,identificador)
									INICIANDO <expressao>
										Procedimento inicia com token: (x,identificador)
										INICIANDO <operador_unario>
											Procedimento inicia com token: (x,identificador)
											Token: identificador
										FINALIZANDO <operador_unario>
										INICIANDO <termo>
											Procedimento inicia com token: (x,identificador)
											INICIANDO <fator>
												Procedimento inicia com token: (x,identificador)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (+,simbolo_mais)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (+,simbolo_mais)
											INICIANDO <termo>
												Procedimento inicia com token: (3,numero)
												INICIANDO <fator>
													Procedimento inicia com token: (3,numero)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (THEN,THEN)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (THEN,THEN)
											FINALIZANDO <mais_termos>
										FINALIZANDO <mais_termos>
									FINALIZANDO <expressao>
									INICIANDO <relacional>
										Procedimento inicia com token: (THEN,THEN)
Erro sintático:  = | <> | < | <= | > | >= faltando na posição 18 da linha     IF x + 3  THEN
										Iniciando tratamento de erro
										Falha no tratamento: THEN != simbolo_menos
										Falha no tratamento: THEN != simbolo_mais
										Falha no tratamento: THEN != identificador
										Falha no tratamento: THEN != 
										Falha no tratamento: THEN != simbolo_abre_parentese
										Falha no tratamento: THEN != simbolo_ponto_virgula
										Encontrou simbolo de sincronizacao: THEN
									FINALIZANDO <relacional>
									INICIANDO <expressao>
										Procedimento inicia com token: (THEN,THEN)
										INICIANDO <operador_unario>
											Procedimento inicia com token: (THEN,THEN)
											Token: THEN
										FINALIZANDO <operador_unario>
										INICIANDO <termo>
											Procedimento inicia com token: (THEN,THEN)
											INICIANDO <fator>
												Procedimento inicia com token: (THEN,THEN)
Erro sintático:  ident | numero | ( <expressão> ) faltando na posição 18 da linha     IF x + 3  THEN
												Iniciando tratamento de erro
												Falha no tratamento: THEN != simbolo_multiplicacao
												Falha no tratamento: THEN != simbolo_divisao
												Falha no tratamento: THEN != simbolo_menos
												Falha no tratamento: THEN != simbolo_mais
												Encontrou simbolo de sincronizacao: THEN
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (THEN,THEN)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (THEN,THEN)
										FINALIZANDO <mais_termos>
									FINALIZANDO <expressao>
								FINALIZANDO <condicao>
								INICIANDO <comando>
									Procedimento inicia com token: (BEGIN,BEGIN)
									INICIANDO <comando>
										Procedimento inicia com token: (a,identificador)
										INICIANDO <expressao>
											Procedimento inicia com token: (a,identificador)
											INICIANDO <operador_unario>
												Procedimento inicia com token: (a,identificador)
												Token: identificador
											FINALIZANDO <operador_unario>
											INICIANDO <termo>
												Procedimento inicia com token: (a,identificador)
												INICIANDO <fator>
													Procedimento inicia com token: (a,identificador)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (+,simbolo_mais)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (+,simbolo_mais)
												INICIANDO <termo>
													Procedimento inicia com token: (x,identificador)
													INICIANDO <fator>
														Procedimento inicia com token: (x,identificador)
													FINALIZANDO <fator>
													INICIANDO <mais_fatores>
														Procedimento inicia com token: (;,simbolo_ponto_virgula)
													FINALIZANDO <mais_fatores>
												FINALIZANDO <termo>
												INICIANDO <mais_termos>
													Procedimento inicia com token: (;,simbolo_ponto_virgula)
												FINALIZANDO <mais_termos>
											FINALIZANDO <mais_termos>
										FINALIZANDO <expressao>
									FINALIZANDO <comando>
									Simbolo: (;,simbolo_ponto_virgula)
									INICIANDO <mais_cmd>
										Procedimento inicia com token: (;,simbolo_ponto_virgula)
										INICIANDO <comando>
											Procedimento inicia com token: (b,identificador)
											INICIANDO <expressao>
												Procedimento inicia com token: (3,numero)
												INICIANDO <operador_unario>
													Procedimento inicia com token: (3,numero)
													Token: numero
												FINALIZANDO <operador_unario>
												INICIANDO <termo>
													Procedimento inicia com token: (3,numero)
													INICIANDO <fator>
														Procedimento inicia com token: (3,numero)
													FINALIZANDO <fator>
													INICIANDO <mais_fatores>
														Procedimento inicia com token: (-,simbolo_mais)
													FINALIZANDO <mais_fatores>
												FINALIZANDO <termo>
												INICIANDO <mais_termos>
													Procedimento inicia com token: (-,simbolo_mais)
													INICIANDO <termo>
														Procedimento inicia com token: (b,identificador)
														INICIANDO <fator>
															Procedimento inicia com token: (b,identificador)
														FINALIZANDO <fator>
														INICIANDO <mais_fatores>
															Procedimento inicia com token: (/,simbolo_divisao)
															INICIANDO <fator>
																Procedimento inicia com token: (a,identificador)
															FINALIZANDO <fator>
															INICIANDO <mais_fatores>
																Procedimento inicia com token: (;,simbolo_ponto_virgula)
															FINALIZANDO <mais_fatores>
														FINALIZANDO <mais_fatores>
													FINALIZANDO <termo>
													INICIANDO <mais_termos>
														Procedimento inicia com token: (;,simbolo_ponto_virgula)
													FINALIZANDO <mais_termos>
												FINALIZANDO <mais_termos>
											FINALIZANDO <expressao>
										FINALIZANDO <comando>
										Simbolo: (;,simbolo_ponto_virgula)
										INICIANDO <mais_cmd>
											Procedimento inicia com token: (;,simbolo_ponto_virgula)
											INICIANDO <comando>
												Procedimento inicia com token: (END,END)
											FINALIZANDO <comando>
											Simbolo: (END,END)
											INICIANDO <mais_cmd>
												Procedimento inicia com token: (END,END)
											FINALIZANDO <mais_cmd>
										FINALIZANDO <mais_cmd>
									FINALIZANDO <mais_cmd>
								FINALIZANDO <comando>
								Simbolo: (;,simbolo_ponto_virgula)
							FINALIZANDO <comando>
							Simbolo: (;,simbolo_ponto_virgula)
							INICIANDO <mais_cmd>
								Procedimento inicia com token: (;,simbolo_ponto_virgula)
								INICIANDO <comando>
									Procedimento inicia com token: (c,identificador)
									INICIANDO <expressao>
										Procedimento inicia com token: (5,numero)
										INICIANDO <operador_unario>
											Procedimento inicia com token: (5,numero)
											Token: numero
										FINALIZANDO <operador_unario>
										INICIANDO <termo>
											Procedimento inicia com token: (5,numero)
											INICIANDO <fator>
												Procedimento inicia com token: (5,numero)
											FINALIZANDO <fator>
											INICIANDO <mais_fatores>
												Procedimento inicia com token: (+,simbolo_mais)
											FINALIZANDO <mais_fatores>
										FINALIZANDO <termo>
										INICIANDO <mais_termos>
											Procedimento inicia com token: (+,simbolo_mais)
											INICIANDO <termo>
												Procedimento inicia com token: (7,numero)
												INICIANDO <fator>
													Procedimento inicia com token: (7,numero)
												FINALIZANDO <fator>
												INICIANDO <mais_fatores>
													Procedimento inicia com token: (;,simbolo_ponto_virgula)
												FINALIZANDO <mais_fatores>
											FINALIZANDO <termo>
											INICIANDO <mais_termos>
												Procedimento inicia com token: (;,simbolo_ponto_virgula)
											FINALIZANDO <mais_termos>
										FINALIZANDO <mais_termos>
									FINALIZANDO <expressao>
								FINALIZANDO <comando>
								Simbolo: (;,simbolo_ponto_virgula)
								INICIANDO <mais_cmd>
									Procedimento inicia com token: (;,simbolo_ponto_virgula)
									INICIANDO <comando>
										Procedimento inicia com token: (END,END)
									FINALIZANDO <comando>
									Simbolo: (END,END)
									INICIANDO <mais_cmd>
										Procedimento inicia com token: (END,END)
									FINALIZANDO <mais_cmd>
								FINALIZANDO <mais_cmd>
							FINALIZANDO <mais_cmd>
						FINALIZANDO <mais_cmd>
					FINALIZANDO <mais_cmd>
				FINALIZANDO <comando>
				Simbolo: (.,simbolo_ponto)
			FINALIZANDO <bloco>.
			Simbolo: (.,simbolo_ponto)
			Programa terminou como esperado (leu ponto final --> leu NULL)
		FINALIZANDO <bloco>.
